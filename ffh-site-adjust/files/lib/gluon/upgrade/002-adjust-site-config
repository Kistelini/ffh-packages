#!/usr/bin/lua
local site = require('gluon.site_config')
local uci = require 'luci.model.uci'
local json = require 'luci.jsonc'
local districts = require('districts')

local c = uci:cursor()

-- we do this here to revert some magical stuff in gluon.site_config which
-- causes troubles
site=getmetatable(site)['__index']

new_district = c:get("gluon-node-info","district", "current")

-- if district not changed: exit
if site['district'] == new_district then
    print('nothing to do')
    os.exit()
end

base_port = 10000

-- if district not found: choose default district and
-- set uci value to "leetfeld"
d = districts[new_district]
if d == nil then
    new_district="leetfeld"

    c:set('gluon-node-info', 'district', 'district')
    c:set('gluon-node-info', 'district', 'current', new_district)
    c:save('gluon-node-info')
    c:commit('gluon-node-info')

    new_district = c:get("gluon-node-info","district", "current")

    d={n="Leetfeld",p=127}
end

site['wifi24']['mesh']['id'] = 'ffh-mesh-' .. new_district
site['wifi5']['mesh']['id'] = 'ffh-mesh-' .. new_district

-- generate the remotes
for supernode,line in pairs(site['fastd_mesh_vpn']['groups']['backbone']['peers']) do

      for j,old in ipairs(line['remotes']) do
              line['remotes'][j] = '"' .. supernode .. '.s.ffh.zone" port ' .. tostring(d['p'] + base_port)
      end

end

site['prefix4'] = '10.' .. tostring(d['p']) .. '.0.0/16'
site['prefix6'] = 'fdca:ffee:8:' .. tostring(d['p']) .. '::/64'

site['next_node']['ip4'] = '10.' .. tostring(d['p']) .. '.0.1'
site['next_node']['ip6'] = 'fdca:ffee:8:' .. tostring(d['p']) .. '::1'

site['district'] = new_district

new_site_str = json.stringify(site)

file = io.open("/lib/gluon/site.json", "w")
io.output(file)
io.write(new_site_str)
io.close(file)
